#ifdef GL_FRAGMENT_SHADER_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif

uniform vec4 uMaterialAmbient;
uniform vec4 uMaterialDiffuse;
uniform vec4 uMaterialSpecular;

uniform vec4 uLightAmbient;
uniform vec4 uLightDiffuse;
uniform vec4 uLightSpecular;
uniform float uShiny;

varying vec3 fNorm;
varying vec3 fEye;
varying vec3 fLight;

void main()
{
    vec4 ambient = uLightAmbient * uMaterialAmbient;
    vec4 specular = uLightSpecular * uMaterialSpecular;
    vec4 diffuse = max(dot(fLight, fNorm), 0.0) * uLightDiffuse * uMaterialDiffuse;
    vec4 fColor = ambient + diffuse;

    if (dot(fLight, fNorm) >= 0.0) {
      fColor += pow(max(dot(fNorm, normalize(fLight - fEye)), 0.0), uShiny) * specular;
    }

    fColor.a = 1.0;
    gl_FragColor = fColor;
}